https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions
https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU
https://docs.google.com/spreadsheets/d/1A2PaQKcdwO_lwxz9bAnxXnIQayCouZP6d-ENrBz_NXc/edit#gid=0
neetcode.io
https://www.youtube.com/playlist?list=PLot-Xpze53ldVwtstag2TL4HQhAnC8ATf
https://www.youtube.com/playlist?list=PLN5xhykgh2Vmid6zi9lxzNYnQe_ZtEEsY

https://leetcode.com/
https://workat.tech/
https://levels.fyi

https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed

Data Structures
---------------------------
Fundamental Data Structures
    - Arrays
    - ArrayLists
    - Singly Linked Lists
    - Circularly Linked Lists
    - Doubly Linked Lists

Stacks, Queues, and Deques
    - The Stack Abstract Data Type
    - A Simple Array-Based Stack Implementation
    - Implementing a Stack with a Singly Linked List

    - The Queue Abstract Data Type
    - Array-Based Queue Implementation
    - Implementing a Queue with a Singly Linked List
    - A Circular Queue

    - The Deque Abstract Data Type
    - Implementing a Deque

Trees
    - General Trees
    - Binary Trees
    - Implementing Trees
        - Linked Structure for Binary Trees
        - Array-Based Representation of a Binary Tree
        - Linked Structure for General Trees
    - Tree Traversal Algorithms
        - Preorder and Postorder Traversals of General Trees
        - Breadth-First Tree Traversal
        - Inorder Traversal of a Binary Tree

Priority Queues
    - The Priority Queue ADT
    - Implementing a Priority Queue with a Heap
    - Bottom-Up Heap Construction
    - Heap-Sort
    - Adaptable Priority Queues
        - Location-Aware Entries
        - Implementing an Adaptable Priority Queue

Maps, Hash Tables
 - The Map ADT
 - A Simple Unsorted Map Implementation
 - Hash Functions
 - Collision-Handling Schemes
 - Load Factors, Rehashing, and Efficiency
 - Java Hash Table Implementation

Search Trees
 - Binary Search Trees
 - Balanced Search Trees



Sorting and Selection
    - Merge Sort
        - Array-Based Implementation of Merge-Sort
        - Sorting Linked Lists
        - A Bottom-Up (Nonrecursive) Merge-Sort
    - Quick Sort
        - Linked List
        - In Place using Array
    - Counting Sort, Bucket Sort
    - Radix Sort
    - Randomized Quick Select

Trie / Prefix Tree

Graphs
    - Edge List
    - Adjacency List
    - Adjacency Map
    - Adjacency Matrix

    - Depth First Search(DFS)
    - Breadth First Search(BFS)
    - Transitive Closure
    - Topological Sort
    - Dijikstra Algorithm
    -
